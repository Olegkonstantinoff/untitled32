import java.util.NoSuchElementException;

public class Main {
    public static void main(String[] args) {


        class LinkedList {
            private Node head;
            private int size ;

            public LinkedList() {
                head = null;
                size = 0;
            }


            public void addFirst(int value) {
                head = new Node(value, head);
                size++;
            }


            public void addLast(int value) {
                Node newNode = new Node(value, null);

                if (head == null) {
                    head = newNode;
                } else {
                    Node current = head;

                    while (current.getNext() != null) {
                        current = current.getNext();
                    }

                    current.setNext(newNode);
                }

                size++;
            }


            public void add(int value, int index) {
                if (index < 0 || index > size) {
                    throw new IndexOutOfBoundsException("Index: " + index + ", Size: " + size);
                }

                if (index == 0) {
                    addFirst(value);
                } else if (index == size) {
                    addLast(value);
                } else {
                    Node current = head;

                    for (int i = 1; i < index; i++) {
                        current = current.getNext();
                    }

                    Node newNode = new Node(value, current.getNext());
                    current.setNext(newNode);
                    size++;
                }
            }

            public void removeFirst() {
                if (head == null) {
                    throw new NoSuchElementException() ;
                }

                head = head.getNext();
                size--;
            }


            public void removeLast() {
                if (head == null) {
                    throw new NoSuchElementException();
                }

                if (head.getNext() == null) {
                    head = null;
                } else {
                    Node current = head;

                    while (current.getNext().getNext() != null) {
                        current = current.getNext();
                    }

                    current.setNext(null);
                }
                size--;
            }

            public void remove(int index) {
                if (index < 0 || index >= size) {
                    throw new IndexOutOfBoundsException("Index: " + index + ", Size: " + size);
                }

                if (index == 0) {
                    removeFirst();
                } else if (index == size - 1) {
                    removeLast();
                } else {
                    Node current = head;

                    for (int i = 1; i < index; i++) {
                        current = current.getNext();
                    }

                    current.setNext(current.getNext().getNext());
                    size--;
                }
            }


            public int get(int index) {
                if (index < 0 || index >= size) {
                    throw new IndexOutOfBoundsException("Index: " + index + ", Size: " + size);
                }

                Node current = head;

                for (int i = 0; i < index; i++) {
                    current = current.getNext();
                }

                return current.getValue();
            }


            public int size() {
                return size;
            }


            public void printList() {
                Node current = head;

                while (current != null) {
                    System.out.print(current.getValue() + " ");
                    current = current.getNext();
                }


            }

             static class Node {
                private int value;
                private Node next;

                public Node(int value, Node next) {
                    this.value = value;
                    this.next = next;
                }

                public int getValue() {
                    return value;
                }

                public void setValue(int value) {
                    this.value = value;
                }

                public Node getNext() {
                    return next;
                }

                public void setNext(Node next) {
                    this.next = next;

                }
            }
        }
    }
}
